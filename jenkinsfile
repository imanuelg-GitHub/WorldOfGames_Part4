node 
{
    stage('Clean before we start') 
    { 
        deleteDir()
        bat 'docker rm -f worldofgames_part4-pipelinecontainer'
    }
    
    stage('Checkout the repository') 
    {
        bat 'git clone https://github.com/imanuelg-GitHub/WorldOfGames_Part4.git'
    }
    
    stage('Build the docker image') 
    {
        bat 'docker build -t worldofgames_part4-pipeline  "./WorldOfGames_Part4"'
    }
    
    stage('Run the docker image') 
    {
        bat 'docker run -dp 8777:5001 --name worldofgames_part4-pipelinecontainer --mount type=bind,source=/c:/dummy,target=/WorldOfGames_Part4/scores  worldofgames_part4-pipeline'
    }
    
    stage('Call Python')
    {
        try
        {
            bat 'python ./WorldOfGames_Part4/e2e.py' 
        }
        catch(all) 
        {
            bat 'echo "Error Occured in build"'
            bat 'docker rm -f worldofgames_part4-pipelinecontainer'
            currentBuild.result = 'FAILURE'
            bat 'exit -1'
        }   
    }
    
    if(currentBuild.result != 'FAILURE')
    {
        stage('Final steps')
        {
            bat 'docker tag worldofgames_part4-pipeline imanuelg/worldofgames_part4'
            bat 'docker push imanuelg/worldofgames_part4'
            
            bat 'docker stop worldofgames_part4-pipelinecontainer'
            bat 'docker rm -f worldofgames_part4-pipelinecontainer'
            bat 'docker image rm worldofgames_part4-pipeline'
            bat 'docker image rm imanuelg/worldofgames_part4'
        }
    }    
}
